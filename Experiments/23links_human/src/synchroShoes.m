
% Copyright (C) 2018 Istituto Italiano di Tecnologia (IIT)
% All rights reserved.
%
% This software may be modified and distributed under the terms of the
% GNU Lesser General Public License v2.1 or any later version.

function [shoes] = synchroShoes(shoes)
%SYNCHROSHOES synchronizes data between Right and Left Shoes.


vectDim = size(shoes.Right.single_synch.totalForce.forces,1);

if size(shoes.Right.single_synch.totalForce.time,2) > size(shoes.Left.single_synch.totalForce.time,2)
    % RIGHT INTERPOLATION--------------------------------------------------------------------
    % uniform time
    shoes.Right.interp_synch.time = shoes.Left.single_synch.totalForce.time;
    
    for i = 1 : vectDim
        %frontForce
        shoes.Right.interp_synch.frontForce.forces (i,:) = interp1(...
                                            shoes.Right.single_synch.frontForce.time', ...
                                            shoes.Right.single_synch.frontForce.forces(i,:), ...
                                            shoes.Left.single_synch.totalForce.time', ...
                                            'linear', 'extrap'); %extrap for avoiding initial NaN!
        shoes.Right.interp_synch.frontForce.moments (i,:) = interp1(...
                                            shoes.Right.single_synch.frontForce.time', ...
                                            shoes.Right.single_synch.frontForce.moments(i,:), ...
                                            shoes.Left.single_synch.totalForce.time', ...
                                            'linear', 'extrap');  
        %rearForce
        shoes.Right.interp_synch.rearForce.forces (i,:) = interp1(...
                                            shoes.Right.single_synch.rearForce.time', ...
                                            shoes.Right.single_synch.rearForce.forces(i,:), ...
                                            shoes.Left.single_synch.totalForce.time', ...
                                            'linear', 'extrap');
        shoes.Right.interp_synch.rearForce.moments (i,:) = interp1(...
                                            shoes.Right.single_synch.rearForce.time', ...
                                            shoes.Right.single_synch.rearForce.moments(i,:), ...
                                            shoes.Left.single_synch.totalForce.time', ...
                                            'linear', 'extrap');  
        %totalForce
        shoes.Right.interp_synch.totalForce.forces (i,:) = interp1(...
                                            shoes.Right.single_synch.totalForce.time', ...
                                            shoes.Right.single_synch.totalForce.forces(i,:), ...
                                            shoes.Left.single_synch.totalForce.time', ...
                                            'linear', 'extrap');
        shoes.Right.interp_synch.totalForce.moments (i,:) = interp1(...
                                            shoes.Right.single_synch.totalForce.time', ...
                                            shoes.Right.single_synch.totalForce.moments(i,:), ...
                                            shoes.Left.single_synch.totalForce.time', ...
                                            'linear', 'extrap');                                
    end
    
    %time
    shoes.Left.interp_synch.time = shoes.Left.single_synch.totalForce.time;
    %frontForce
    shoes.Left.interp_synch.frontForce.forces  = shoes.Left.single_synch.frontForce.forces;
    shoes.Left.interp_synch.frontForce.moments = shoes.Left.single_synch.frontForce.moments;
    %rearForce
    shoes.Left.interp_synch.rearForce.forces   = shoes.Left.single_synch.rearForce.forces;
    shoes.Left.interp_synch.rearForce.moments  = shoes.Left.single_synch.rearForce.moments;    
    %totalForce    
    shoes.Left.interp_synch.totalForce.forces  = shoes.Left.single_synch.totalForce.forces;
    shoes.Left.interp_synch.totalForce.moments = shoes.Left.single_synch.totalForce.moments;

else
    % LEFT INTERPOLATION--------------------------------------------------------------------
    % uniform time
    shoes.Left.interp_synch.time = shoes.Right.single_synch.totalForce.time;
    
    for i = 1 : vectDim
        %frontForce
        shoes.Left.interp_synch.frontForce.forces (i,:) = interp1(...
                                            shoes.Left.single_synch.frontForce.time', ...
                                            shoes.Left.single_synch.frontForce.forces(i,:), ...
                                            shoes.Right.single_synch.totalForce.time', ...
                                            'linear', 'extrap');
        shoes.Left.interp_synch.frontForce.moments (i,:) = interp1(...
                                            shoes.Left.single_synch.frontForce.time', ...
                                            shoes.Left.single_synch.frontForce.moments(i,:), ...
                                            shoes.Right.single_synch.totalForce.time', ...
                                            'linear', 'extrap');  
        %rearForce
        shoes.Left.interp_synch.rearForce.forces (i,:) = interp1(...
                                            shoes.Left.single_synch.rearForce.time', ...
                                            shoes.Left.single_synch.rearForce.forces(i,:), ...
                                            shoes.Right.single_synch.totalForce.time', ...
                                            'linear', 'extrap');
        shoes.Left.interp_synch.rearForce.moments (i,:) = interp1(...
                                            shoes.Left.single_synch.rearForce.time', ...
                                            shoes.Left.single_synch.rearForce.moments(i,:), ...
                                            shoes.Right.single_synch.totalForce.time', ...
                                            'linear', 'extrap');  
        %totalForce
        shoes.Left.interp_synch.totalForce.forces (i,:) = interp1(...
                                            shoes.Left.single_synch.totalForce.time', ...
                                            shoes.Left.single_synch.totalForce.forces(i,:), ...
                                            shoes.Right.single_synch.totalForce.time', ...
                                            'linear', 'extrap');
        shoes.Left.interp_synch.totalForce.moments (i,:) = interp1(...
                                            shoes.Left.single_synch.totalForce.time', ...
                                            shoes.Left.single_synch.totalForce.moments(i,:), ...
                                            shoes.Right.single_synch.totalForce.time', ...
                                            'linear', 'extrap');                                
    end
    
    %time
    shoes.Right.interp_synch.time = shoes.Right.single_synch.totalForce.time;
    %frontForce
    shoes.Right.interp_synch.frontForce.forces  = shoes.Right.single_synch.frontForce.forces;
    shoes.Right.interp_synch.frontForce.moments = shoes.Right.single_synch.frontForce.moments;
    %rearForce
    shoes.Right.interp_synch.rearForce.forces   = shoes.Right.single_synch.rearForce.forces;
    shoes.Right.interp_synch.rearForce.moments  = shoes.Right.single_synch.rearForce.moments;    
    %totalForce    
    shoes.Right.interp_synch.totalForce.forces  = shoes.Right.single_synch.totalForce.forces;
    shoes.Right.interp_synch.totalForce.moments = shoes.Right.single_synch.totalForce.moments;
end

end
